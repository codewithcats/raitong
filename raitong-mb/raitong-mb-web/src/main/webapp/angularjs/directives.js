// Generated by CoffeeScript 1.3.3
'use strict';

var d;

d = angular.module('raitong.mb.directive', []);

d.directive('wizard', function() {
  var postLink;
  postLink = function(scope, elements, attrs) {
    var activeIndex, container, firstActiveItem, items, leftNav, renderCarouselControl, rightNav, wizard;
    wizard = scope.$eval(attrs.wizard);
    container = $('.carousel', elements);
    container.carousel({
      interval: false
    });
    items = $('.item', elements);
    if (items.length < 1) {
      throw 'No items at all!';
    }
    firstActiveItem = $('.active.item', elements);
    if (firstActiveItem.length < 1) {
      throw 'No active item specific!';
    }
    activeIndex = items.index(firstActiveItem);
    renderCarouselControl = function(doValidate) {
      var valid, validation;
      leftNav.toggle(activeIndex > 0);
      if (doValidate) {
        validation = wizard.validations[activeIndex];
        valid = validation.validate(validation.subject, scope);
        rightNav.toggle(valid && activeIndex < items.length - 1);
        return;
      }
      return rightNav.toggle(items.length - 1);
    };
    leftNav = $('a.carousel-control.left', elements);
    leftNav.click(function() {
      if (activeItem >= 1) {
        container.carousel('prev');
        activeIndex--;
      }
      return renderCarouselControl(false);
    });
    rightNav = $('a.carousel-control.right', elements);
    rightNav.click(function() {
      var valid, validation;
      if (activeIndex < items.length) {
        validation = wizard.validations[activeIndex];
        valid = validation.validate(validation.subject, scope);
        if (valid) {
          container.carousel('next');
          activeIndex++;
          renderCarouselControl(true);
          return;
        }
        return renderCarouselControl(false);
      }
    });
    renderCarouselControl(true);
  };
  return postLink;
});
