// Generated by CoffeeScript 1.3.3
'use strict';

var d;

d = angular.module('raitong.mb.directive', []);

d.directive('wizard', function() {
  return {
    restrict: 'A',
    link: function(scope, elements, attrs) {
      var activeIndex, container, firstActiveItem, items, leftNav, next, previous, renderCarouselControl, rightNav, v, wizard, _i, _len, _ref;
      wizard = scope.$eval(attrs.wizard);
      _ref = wizard.validations;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        v = _ref[_i];
        scope.$watch(v, function(valid) {
          return renderCarouselControl(activeIndex, valid);
        });
      }
      container = $('.carousel', elements);
      container.carousel({
        interval: false
      });
      items = $('.item', elements);
      if (items.length < 1) {
        throw 'No items at all!';
      }
      firstActiveItem = $('.active.item', elements);
      if (firstActiveItem.length < 1) {
        throw 'No active item specific!';
      }
      activeIndex = items.index(firstActiveItem);
      renderCarouselControl = function() {
        var valid;
        leftNav.toggle(activeIndex > 0);
        valid = scope.$eval(wizard.validations[activeIndex]);
        rightNav.toggle(activeIndex < items.length - 1 && valid);
      };
      next = function() {
        if (activeIndex < items.length) {
          container.carousel('next');
          activeIndex++;
          renderCarouselControl();
        }
      };
      previous = function() {
        if (activeIndex >= 1) {
          container.carousel('prev');
          activeIndex--;
          renderCarouselControl();
        }
      };
      leftNav = $('a.carousel-control.left', elements);
      leftNav.click(previous);
      rightNav = $('a.carousel-control.right', elements);
      rightNav.click(next);
      renderCarouselControl();
    }
  };
});
