// Generated by CoffeeScript 1.3.3
'use strict';

var CreateSubscriberCtrl, EditSubscriberCtrl, ListSubscriberCtrl, SubscriberInfoCtrl;

ListSubscriberCtrl = function($http, $scope) {
  var getSubscribers;
  getSubscribers = function() {
    var req;
    req = $http.get('subscribers');
    req.success(function(subscribers) {
      return $scope.subscribers = subscribers;
    });
  };
  getSubscribers();
  $scope.del = function(s) {
    var req;
    req = $http["delete"]('subscribers/' + s.customerNo);
    req.success(function() {
      getSubscribers();
    });
  };
  $scope.displayDate = function(date) {
    if (date) {
      return moment(date).format('Do MMMM YYYY');
    } else {
      return '';
    }
  };
  $scope.displayLastestSubscriptionInfo = function(s) {
    var lsubs, subs;
    subs = s.subscriptions;
    if (!subs || subs.length < 1) {
      return 'No Subscription';
    }
    lsubs = subs[subs.length - 1];
    return "" + lsubs.months + " months, start: " + ($scope.displayDate(lsubs.startingDate));
  };
};

ListSubscriberCtrl.$inject = ['$http', '$scope'];

CreateSubscriberCtrl = function($scope, $http, $location) {
  $scope.mode = 'create';
  $scope.birthdayToYear = moment().year();
  $scope.subscriber = new Subscriber;
  $scope.notSpecificBD = true;
  return $scope.create = function(s) {
    var req;
    req = $http.post('subscribers', s);
    return req.success(function(subscriber) {
      $location.path('/subscribers');
    });
  };
};

CreateSubscriberCtrl.$inject = ['$scope', '$http', '$location'];

SubscriberInfoCtrl = function($scope, $routeParams, SubscriberService, SubscriptionService) {
  var subscriber;
  subscriber = SubscriberService.get($routeParams, function() {
    $scope.subscriber = new Subscriber(subscriber);
  });
  $scope.displayInfo = function(info) {
    return info || 'No Information';
  };
  $scope.getInfoClass = function(info) {
    if (!info) {
      return 'info-undefined';
    }
  };
  $scope.displayDate = function(millis, nullMsg) {
    if (!nullMsg) {
      nullMsg = 'No Information';
    }
    if (!millis) {
      return nullMsg;
    }
    return moment(millis).format('Do MMMM YYYY');
  };
  $scope.displayMoney = function(money) {
    if (angular.isNumber(money) === false) {
      return 'No Information';
    }
    return money.toFixed(2);
  };
  $scope.del = function(subscriber, subscription) {
    return SubscriptionService["delete"]({
      customerNo: subscriber.customerNo,
      subscriptionId: subscription.id
    }, function() {
      return subscriber = SubscriberService.get($routeParams, function() {
        $scope.subscriber = new Subscriber(subscriber);
      });
    });
  };
};

SubscriberInfoCtrl.$inject = ['$scope', '$routeParams', 'SubscriberService', 'SubscriptionService'];

EditSubscriberCtrl = function($scope, $routeParams, $location, SubscriberService) {
  var subscriber;
  $scope.mode = 'edit';
  subscriber = SubscriberService.get($routeParams, function() {
    $scope.subscriber = new Subscriber(subscriber);
    if (!$scope.subscriber.birthday) {
      return $scope.notSpecificBD = true;
    }
  });
  return $scope.save = function(s) {
    SubscriberService.update(s, function() {
      var customerNo;
      customerNo = subscriber.customerNo;
      $location.path("/subscribers/" + customerNo);
    });
  };
};

EditSubscriberCtrl.$inject = ['$scope', '$routeParams', '$location', 'SubscriberService'];
